buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_version
version = mod_group_id

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://parchmentmc.org/docs/getting-started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: mapping_channel, version: mapping_version

    // When true, this property will have all Eclipse/IntelliJ IDEA run configurations run the "prepareX" task for the given run configuration before launching the game.
    // enableEclipsePrepareRuns = true
    // enableIdeaPrepareRuns = true

    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    // It is REQUIRED to be set to true for this template to function.
    // See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
    copyIdeResources = true

    // When true, this property will add the folder name of all declared run configurations to generated IDE run configurations.
    // The folder name can be set on a run configuration using the "folderName" property.
    // By default, the folder name of a run configuration is the name of the Gradle project containing it.
    // generateRunFolders = true

    // This property enables access transformers for use in development.
    // They will be applied to the Minecraft artifact.
    // The access transformer file can be anywhere in the project.
    // However, it must be at "META-INF/accesstransformer.cfg" in the final mod jar to be loaded by Forge.
    // This default location is a best practice to automatically put the file in the right place in the final jar.
    // See https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/ for more information.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://www.jitpack.io' }
}

dependencies {
    // Specify the version of Minecraft to use.
    // Any artifact can be supplied so long as it has a "userdev" classifier artifact and is a compatible patcher artifact.
    // The "userdev" classifier will be requested and setup by ForgeGradle.
    // If the group id is "net.minecraft" and the artifact id is one of ["client", "server", "joined"],
    // then special handling is done to allow a setup of a vanilla dependency without the use of an external repository.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("curse.maven:create-328085:4835190")
    implementation fg.deobf("curse.maven:mekanism-268560:4644795")
    implementation fg.deobf("curse.maven:pipez-443900:4713644")
    implementation fg.deobf("curse.maven:apotheosis-313970:4730358")
    implementation fg.deobf("curse.maven:geckolib-388172:4407241")
    implementation fg.deobf("curse.maven:patchouli-306770:4031402")
    implementation fg.deobf("curse.maven:curios-309927:4834339")
    implementation fg.deobf("curse.maven:lucent-493280:4085139")
    implementation fg.deobf("curse.maven:balm-531761:4751735")
    implementation fg.deobf("curse.maven:chalk-533748:4827982")
    implementation fg.deobf("curse.maven:titanium-287342:4786622")
    implementation fg.deobf("curse.maven:industrial-foregoing-266515:4459182")
    implementation fg.deobf("curse.maven:openblocks-elevator-250832:4859577")
    implementation fg.deobf("curse.maven:framework-549225:4718247")
    implementation fg.deobf("curse.maven:evilcraft-74610:4791844")
    implementation fg.deobf("curse.maven:libx-412525:4052778")
    implementation fg.deobf("curse.maven:forgiving-void-271009:3833506")
    implementation fg.deobf("curse.maven:skyblock-builder-446691:4793674")
    implementation fg.deobf("curse.maven:integrated-dynamics-236307:4791809")
    implementation fg.deobf("curse.maven:common-capabilities-247007:4391413")
    implementation fg.deobf("curse.maven:cyclops-core-232758:4808713")
    implementation fg.deobf("curse.maven:immersive-engineering-231951:4780537")
    implementation fg.deobf("curse.maven:primal-magick-545271:3984526")
    implementation fg.deobf("curse.maven:backpacked-352835:4725664")
    implementation fg.deobf("curse.maven:identity-391390:4399470")
    implementation fg.deobf("curse.maven:aquaculture-60028:4074684")
    implementation fg.deobf("curse.maven:createaddition-439890:4767406")
    implementation fg.deobf("curse.maven:cccbridge-656214:4632363")
    implementation fg.deobf("curse.maven:create-enchantment-industry-688768:4836885")
    implementation fg.deobf("curse.maven:cc-tweaked-282001:4630524")
    implementation fg.deobf("curse.maven:create-diesel-generators-869316:4861948")
    implementation fg.deobf("curse.maven:natures-aura-306626:4613484")
    implementation fg.deobf("curse.maven:time-in-a-bottle-standalone-445025:3879896")
    implementation fg.deobf("curse.maven:sophisticated-storage-619320:4859702")
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:4859686")
    implementation fg.deobf("curse.maven:scriptor-magicae-817436:4549561")
    implementation fg.deobf("curse.maven:architectury-api-419699:4555749")
    implementation fg.deobf("curse.maven:more-crafting-tables-for-forge-417365:4777739")
    implementation fg.deobf("curse.maven:create-ender-transmission-737302:4785613")
    implementation fg.deobf("curse.maven:touhou-little-maid-355044:4861330")
    implementation fg.deobf("curse.maven:ore-tree-reborn-557194:4062292")
    implementation fg.deobf("curse.maven:ftb-backups-2-622737:4834398")
    implementation fg.deobf("curse.maven:ftb-ultimine-forge-386134:4598468")
    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:4727833")
    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:4611938")
    implementation fg.deobf("curse.maven:ftb-library-forge-404465:4661834")
    implementation fg.deobf("curse.maven:item-filters-309674:4553326")
    implementation fg.deobf("curse.maven:hostile-neural-networks-552574:4654510")
    implementation fg.deobf("curse.maven:refined-cooking-543972:4110182")
    implementation fg.deobf("curse.maven:cooking-for-blockheads-231484:4749423")
    implementation fg.deobf("curse.maven:refined-storage-243076:4861827")
    implementation fg.deobf("curse.maven:hardcore-torches-forge-576846:4676485")
    implementation fg.deobf("curse.maven:create-mechanical-extruder-686100:4763416")
    implementation fg.deobf("curse.maven:create-mechanical-spawner-821828:4763424")
    implementation fg.deobf("curse.maven:sleeping-bags-384485:3920735")
    implementation fg.deobf("curse.maven:mahou-tsukai-342543:4746888")
    implementation fg.deobf("curse.maven:ars-nouveau-401955:4809720")
    // Example mod dependency with JEI - using fg.deobf() ensures the dependency is remapped to your development mappings
    // The JEI API is declared for compile time use, while the full JEI artifact is used at runtime
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    // Example mod dependency using a mod jar from ./libs with a flat dir repository
    // This maps to ./libs/coolmod-${mc_version}-${coolmod_version}.jar
    // The group id is ignored when searching -- in this case, it is "blank"
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info:
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
